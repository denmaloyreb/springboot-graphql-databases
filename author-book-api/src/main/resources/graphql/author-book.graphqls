# Комментарий, которого не будет видно

"""
# Укажем название типа как H1

Текст описания и выделение важного **жирным** или *курсивом*.

## Заголовок второго уровня

Какой-то список:

* Пункт 1
* Пункт 2
* Пункт 3
"""

type Author {
    """Описание поля id"""
    id: ID!
    """Описание поля name"""
    name: String!
    """Описание поля books"""
    books: [Book!]!
}

input CreateAuthorInput {
    name: String!
}

input UpdateAuthorInput {
    name: String
}

# ----
# Book

type Book {
    id: ID!
    isbn: String!
    title: String!
    year: Int!
    author: Author!
    bookReview: BookReview!
}

input CreateBookInput {
    authorId: Int!
    isbn: String!
    title: String!
    year: Int!
}

input UpdateBookInput {
    authorId: Int
    isbn: String
    title: String
    year: Int
}

# ----------
# BookReview

type BookReview {
    error: String
    id: String
    reviews: [Review!]!
}

# ------
# Review

type Review {
    reviewer: String!
    comment: String!
    rating: Int!
    createdAt: String!
}

# ---

type Query {
    """Запрос всех авторов"""
    getAuthors: [Author!]!
    getAuthorById(authorId: ID!): Author
    getAuthorByName(authorName: String!): [Author!]!

    getBooks: [Book!]!
    getBookById(bookId: ID!): Book
}

# ---

type Mutation {
    createAuthor(authorInput: CreateAuthorInput!): Author!
    updateAuthor(authorId: ID!, authorInput: UpdateAuthorInput!): Author!
    deleteAuthor(authorId: ID!): Author!
    """
    # Создание книги

    Для создания книги передайте параметры, указанные в **input CreateBookInput**

    Пример использования в запросе:

    ```graphql
    mutation {
      createBook(
        bookInput: { authorId: 1, isbn: "4567", title: "My book2", year: 2024 }
      ) {
        id
        author {
          id
          name
        }
      }
    }
    ```
    """
    createBook(bookInput: CreateBookInput!): Book!
    updateBook(bookId: ID!, bookInput: UpdateBookInput!): Book!
    deleteBook(bookId: ID!): Book!
}